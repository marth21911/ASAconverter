[{"C:\\Users\\marth\\OneDrive\\Documents\\coding\\firewall\\src\\index.js":"1","C:\\Users\\marth\\OneDrive\\Documents\\coding\\firewall\\src\\reportWebVitals.js":"2","C:\\Users\\marth\\OneDrive\\Documents\\coding\\firewall\\src\\App.js":"3","C:\\Users\\marth\\OneDrive\\Documents\\coding\\firewall\\src\\components\\firewall.js":"4"},{"size":578,"mtime":1653318778894,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1652902492073,"results":"7","hashOfConfig":"6"},{"size":228,"mtime":1653409309221,"results":"8","hashOfConfig":"6"},{"size":4608,"mtime":1653409700797,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cll28e",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\marth\\OneDrive\\Documents\\coding\\firewall\\src\\index.js",[],[],"C:\\Users\\marth\\OneDrive\\Documents\\coding\\firewall\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\marth\\OneDrive\\Documents\\coding\\firewall\\src\\App.js",["25"],[],"import logo from './logo.svg';\nimport './App.css';\nimport FirewallForm from './components/firewall';\n\nfunction App() {\n  return (\n    <div class=\"main\">\n      <FirewallForm></FirewallForm>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\marth\\OneDrive\\Documents\\coding\\firewall\\src\\components\\firewall.js",["26"],[],"import React, {useState} from \"react\";\r\n\r\nconst FirewallForm = (props) =>{\r\n    const [form, setForm] = useState(\"\");\r\n    const [loaded, setLoaded] = useState(\"\");\r\n    const [submit, setSubmit] = useState(false);\r\n    var newEntries=[\"Awaiting Input\"];\r\n    const formMessage = () =>{\r\n        if( submit){\r\n            return (loaded.map((item)=>{\r\n                return <li>{item}</li>\r\n            }))\r\n        }else{\r\n            return newEntries\r\n        }\r\n    }\r\n\r\n    const submitHandler = e =>{\r\n        e.preventDefault();\r\n        console.log(\"succes?\");\r\n        setLoaded(stringSplitter(form));\r\n        setSubmit(true);\r\n        console.log(\"Here's the data\" + loaded);\r\n    }\r\n    const stringSplitter= (form)=> {\r\n        var stringArr = form.split(/(\\d+)/);\r\n        var newDoc=\"\";\r\n        newEntries=[];\r\n        for(var i=0; i<stringArr.length; i++){\r\n            if(stringArr[i].includes(\"p\")){\r\n                stringArr.splice(i,1)\r\n            }\r\n            if(stringArr[i] ===\" \"){\r\n                stringArr[i] = \"-\";\r\n            }\r\n        }\r\n        for(var j=0; j<stringArr.length; j++){\r\n            if(stringArr[j+1]===\"-\"){\r\n                newEntries.push(`edit \"tcp_` + stringArr[j]+stringArr[j+1]+stringArr[j+2] + `\"`);\r\n                newEntries.push(`set tcp-portrange `+ stringArr[j]+stringArr[j+1]+stringArr[j+2]);\r\n                newEntries.push(`next`);\r\n                // newEntries.push(`edit \"tcp_`+stringArr[j]+stringArr[j+1]+stringArr[j+2]+ `\"\\n\r\n                // set tcp-portrange `+ stringArr[j]+stringArr[j+1]+stringArr[j+2] +`\\n\r\n                // next\\n`);\r\n            }else{\r\n                newEntries.push(`edit \"tcp_` + stringArr[j]+ `\"`);\r\n                newEntries.push(`set tcp-portrange `+ stringArr[j]);\r\n                newEntries.push(`next`);\r\n                // newEntries.push(`edit \"tcp_`+ stringArr[j]+`\"\\n\r\n                // set tcp-portrange `+ stringArr[j]+`\\n\r\n                // next \\n`);\r\n            }\r\n        }\r\n        for(var k=0; k<newEntries.length; k++){\r\n            newDoc+= newEntries[k];\r\n        }\r\n        return newEntries\r\n    }\r\n    return(\r\n        <div>\r\n        <div class=\"text-center\">\r\n            <div class=\"ml-auto topbar\" >\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRMsXSSAuD97JT1-OtFuIlkDX9SyKN1mpCeGA&usqp=CAU\" alt=\"SE\" />\r\n            </div>\r\n            <h1>ASA to Fortigate Service Object Converter</h1> \r\n            <h3>Format for conversion: One entry per line, no commas. Ex. below. </h3>\r\n        </div>\r\n            <div class = \"container-lg\">\r\n                <div class = \"row\">\r\n                    <div class= \"col\">\r\n                        <p>port-object eq 7000</p>\r\n                        <p>port-object eq 5280</p>\r\n                        <p>port-object eq 587</p>\r\n                        <p>port-object eq 10022</p>\r\n                        <p>port-object eq 10032</p>\r\n                        <p>port-object range 8080 8089</p>\r\n                        <h5>This tool is designed and build for use by Systems Engineering by Brian Marth. For assistance with your automation and streamlining tool needs, I can be reached through LinkedIn and Github.</h5>\r\n            <a href=\"https://www.linkedin.com/in/bmmarth\"><img width=\"50px\" src=\"https://www.citypng.com/public/uploads/preview/hd-linkedin-official-logo-transparent-background-31623962207jz85kqlqot.png\" alt=\"LinkedIn\"/></a>\r\n            <a href=\"https://github.com/marth21911/Brian_Marth_Info\"><img width=\"50px\" src=\"https://w1.pngwing.com/pngs/328/643/png-transparent-dog-and-cat-github-logo-symbol-chocolatey-white-black-circle.png\" alt=\"Github\"/></a>\r\n                    </div>\r\n                    <div class =\"col\">\r\n                        <ul>\r\n                            {\r\n                                formMessage()\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div class= \"col\">\r\n                        <form  onSubmit = {submitHandler}>\r\n                            <div>\r\n                                <input type=\"submit\" name=\"form\" id=\"formSubmit\" class= \"btn btn-success\"/>\r\n                                <label> Original Entries here</label>\r\n                                <textarea rows=\"300\" cols=\"50\" id=\"doc\" onChange={(e)=> setForm(e.target.value)}></textarea>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n};\r\nexport default FirewallForm;\r\n",{"ruleId":"27","severity":1,"message":"28","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":12},{"ruleId":"27","severity":1,"message":"31","line":55,"column":13,"nodeType":"29","messageId":"30","endLine":55,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'newDoc' is assigned a value but never used."]