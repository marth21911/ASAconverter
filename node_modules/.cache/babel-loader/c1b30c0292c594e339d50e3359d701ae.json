{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marth\\\\OneDrive\\\\Documents\\\\coding\\\\firewall\\\\src\\\\components\\\\firewall.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FirewallForm = props => {\n  _s();\n\n  const [form, setForm] = useState(\"\");\n  const [loaded, setLoaded] = useState(\"\");\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(\"succes?\");\n    setLoaded(stringSplitter(form));\n    console.log(\"Here's the data\" + loaded);\n  };\n\n  const stringSplitter = form => {\n    var newEntries = \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"; // console.log(\"Original doc captured\");\n    // var stringArr = form.split(/(\\d+)/);\n    // var newEntries=[];\n    // var newDoc=\"\";\n    // for(var i=0; i<stringArr.length; i++){\n    //     if(stringArr[i].includes(\"p\")){\n    //         stringArr.splice(i,1)\n    //     }\n    //     if(stringArr[i] ===\" \"){\n    //         stringArr[i] = \"-\";\n    //     }\n    // }\n    // for(var j=0; j<stringArr.length; j++){\n    //     if(stringArr[j+1]===\"-\"){\n    //         newEntries.push(`edit \"tcp_`+stringArr[j]+stringArr[j+1]+stringArr[j+2]+ `\"\\n\n    //         set tcp-portrange `+ stringArr[j]+stringArr[j+1]+stringArr[j+2] +`\\n\n    //         next\\n`);\n    //     }else{\n    //         newEntries.push(`edit \"tcp_`+ stringArr[j]+`\"\\n\n    //         set tcp-portrange `+ stringArr[j]+`\\n\n    //         next \\n`);\n    //     }\n    // }\n    // for(var k=0; k<newEntries.length; k++){\n    //     newDoc+= newEntries[k];\n    // }\n\n    return newEntries;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Format for conversion: One entry per line, no commas. Ex. below. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"port-object eq 7000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"port-object eq 5280\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"port-object eq 587\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"port-object eq 10022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"port-object eq 10032\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"port-object range 8080 8089\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              name: \"form\",\n              id: \"formSubmit\",\n              class: \"btn btn-success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", loaded]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Original Entries here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: \"300\",\n                cols: \"50\",\n                id: \"doc\",\n                onChange: e => setForm(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FirewallForm, \"b2oP+iL+/P6rxXfazOGpeKRmiCY=\");\n\n_c = FirewallForm;\nexport default FirewallForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirewallForm\");","map":{"version":3,"names":["React","useState","FirewallForm","props","form","setForm","loaded","setLoaded","submitHandler","e","preventDefault","console","log","stringSplitter","newEntries","target","value"],"sources":["C:/Users/marth/OneDrive/Documents/coding/firewall/src/components/firewall.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nconst FirewallForm = (props) =>{\r\n    const [form, setForm] = useState(\"\");\r\n    const [loaded, setLoaded] = useState(\"\");\r\n\r\n    const submitHandler = e =>{\r\n        e.preventDefault();\r\n        console.log(\"succes?\");\r\n        setLoaded(stringSplitter(form));\r\n        console.log(\"Here's the data\" + loaded);\r\n    }\r\n    const stringSplitter= (form)=> {\r\n        var newEntries = \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n        // console.log(\"Original doc captured\");\r\n        // var stringArr = form.split(/(\\d+)/);\r\n        // var newEntries=[];\r\n        // var newDoc=\"\";\r\n        // for(var i=0; i<stringArr.length; i++){\r\n        //     if(stringArr[i].includes(\"p\")){\r\n        //         stringArr.splice(i,1)\r\n        //     }\r\n        //     if(stringArr[i] ===\" \"){\r\n        //         stringArr[i] = \"-\";\r\n        //     }\r\n        // }\r\n        // for(var j=0; j<stringArr.length; j++){\r\n        //     if(stringArr[j+1]===\"-\"){\r\n        //         newEntries.push(`edit \"tcp_`+stringArr[j]+stringArr[j+1]+stringArr[j+2]+ `\"\\n\r\n        //         set tcp-portrange `+ stringArr[j]+stringArr[j+1]+stringArr[j+2] +`\\n\r\n        //         next\\n`);\r\n        //     }else{\r\n        //         newEntries.push(`edit \"tcp_`+ stringArr[j]+`\"\\n\r\n        //         set tcp-portrange `+ stringArr[j]+`\\n\r\n        //         next \\n`);\r\n        //     }\r\n        // }\r\n        // for(var k=0; k<newEntries.length; k++){\r\n        //     newDoc+= newEntries[k];\r\n        // }\r\n        return newEntries\r\n    }\r\n    return(\r\n        <div>\r\n        <h1>Format for conversion: One entry per line, no commas. Ex. below. </h1>\r\n            <div class = \"container-lg\">\r\n                <div class = \"row\">\r\n                    <div class= \"col\">\r\n                        <p>port-object eq 7000</p>\r\n                        <p>port-object eq 5280</p>\r\n                        <p>port-object eq 587</p>\r\n                        <p>port-object eq 10022</p>\r\n                        <p>port-object eq 10032</p>\r\n                        <p>port-object range 8080 8089</p>\r\n                    </div>\r\n                    <form  onSubmit = {submitHandler}>\r\n                        <div class= \"col\">\r\n                            <input type=\"submit\" name=\"form\" id=\"formSubmit\" class= \"btn btn-success\"/>\r\n\r\n                        <p> {loaded}</p>\r\n                        </div>\r\n                        <div class = \"col\">\r\n                                <div>\r\n                                    <label> Original Entries here</label>\r\n                                    <textarea rows=\"300\" cols=\"50\" id=\"doc\" onChange={(e)=> setForm(e.target.value)}></textarea>\r\n                                </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default FirewallForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAU;EAAA;;EAC3B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMO,aAAa,GAAGC,CAAC,IAAG;IACtBA,CAAC,CAACC,cAAF;IACAC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACAL,SAAS,CAACM,cAAc,CAACT,IAAD,CAAf,CAAT;IACAO,OAAO,CAACC,GAAR,CAAY,oBAAoBN,MAAhC;EACH,CALD;;EAMA,MAAMO,cAAc,GAAGT,IAAD,IAAS;IAC3B,IAAIU,UAAU,GAAG,gkBAAjB,CAD2B,CAE3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,OAAOA,UAAP;EACH,CA7BD;;EA8BA,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEI;MAAK,KAAK,EAAG,cAAb;MAAA,uBACI;QAAK,KAAK,EAAG,KAAb;QAAA,wBACI;UAAK,KAAK,EAAE,KAAZ;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ,eAMI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eASI;UAAO,QAAQ,EAAIN,aAAnB;UAAA,wBACI;YAAK,KAAK,EAAE,KAAZ;YAAA,wBACI;cAAO,IAAI,EAAC,QAAZ;cAAqB,IAAI,EAAC,MAA1B;cAAiC,EAAE,EAAC,YAApC;cAAiD,KAAK,EAAE;YAAxD;cAAA;cAAA;cAAA;YAAA,QADJ,eAGA;cAAA,gBAAKF,MAAL;YAAA;cAAA;cAAA;cAAA;YAAA,QAHA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAMI;YAAK,KAAK,EAAG,KAAb;YAAA,uBACQ;cAAA,wBACI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAU,IAAI,EAAC,KAAf;gBAAqB,IAAI,EAAC,IAA1B;gBAA+B,EAAE,EAAC,KAAlC;gBAAwC,QAAQ,EAAGG,CAAD,IAAMJ,OAAO,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV;cAA/D;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADR;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA+BH,CAvED;;GAAMd,Y;;KAAAA,Y;AAwEN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}